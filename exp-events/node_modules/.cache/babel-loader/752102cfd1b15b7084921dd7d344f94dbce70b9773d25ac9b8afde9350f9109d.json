{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AtminSheth\\\\Desktop\\\\eventScheduler\\\\eventScheduler\\\\exp-events\\\\src\\\\CalendarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = () => {\n  _s();\n  const [events, setEvents] = useState([]); // Initialize events state as an empty array\n\n  useEffect(() => {\n    // Fetch events from the backend on component mount\n    axios.get('http://localhost:3001/calendar-events').then(response => {\n      // Transform each event data to match FullCalendar's expected format\n      const transformedEvents = response.data.map(event => ({\n        title: event.title,\n        start: event.start,\n        end: event.end\n        // Add other properties as needed, such as 'description' and 'location'\n      }));\n      setEvents(transformedEvents); // Update the events state with the transformed events\n    }).catch(error => {\n      console.error('Error fetching events:', error);\n    });\n  }, []); // The empty dependency array ensures this effect runs only once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calendar-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(FullCalendar, {\n        plugins: [dayGridPlugin] // Use the day grid plugin\n        ,\n        initialView: \"dayGridMonth\" // Set the initial view to show a monthly calendar\n        ,\n        events: events // Pass the events state to the FullCalendar component\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"event-list\",\n        children: mockEvents.map((event, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"event-list-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-header\",\n            children: event.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Date:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 43\n            }, this), \" \", event.date]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"event-location\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 47\n            }, this), \" \", event.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"register-button\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarComponent, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useState","useEffect","FullCalendar","dayGridPlugin","axios","jsxDEV","_jsxDEV","CalendarComponent","_s","events","setEvents","get","then","response","transformedEvents","data","map","event","title","start","end","catch","error","console","className","children","plugins","initialView","fileName","_jsxFileName","lineNumber","columnNumber","mockEvents","index","date","location","_c","$RefreshReg$"],"sources":["C:/Users/AtminSheth/Desktop/eventScheduler/eventScheduler/exp-events/src/CalendarComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport axios from 'axios';\r\n\r\nconst CalendarComponent = () => {\r\n  const [events, setEvents] = useState([]); // Initialize events state as an empty array\r\n\r\n  useEffect(() => {\r\n    // Fetch events from the backend on component mount\r\n    axios.get('http://localhost:3001/calendar-events')\r\n      .then(response => {\r\n        // Transform each event data to match FullCalendar's expected format\r\n        const transformedEvents = response.data.map(event => ({\r\n          title: event.title,\r\n          start: event.start,\r\n          end: event.end,\r\n          // Add other properties as needed, such as 'description' and 'location'\r\n        }));\r\n        setEvents(transformedEvents); // Update the events state with the transformed events\r\n      })\r\n      .catch(error => {\r\n        console.error('Error fetching events:', error);\r\n      });\r\n  }, []); // The empty dependency array ensures this effect runs only once on mount\r\n\r\n  return (\r\n    <div className='calendar-container'>\r\n    <div>\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin]} // Use the day grid plugin\r\n        initialView=\"dayGridMonth\" // Set the initial view to show a monthly calendar\r\n        events={events} // Pass the events state to the FullCalendar component\r\n      />\r\n    </div>\r\n    <div className=\"event-list-container\">\r\n        <ul className=\"event-list\">\r\n          {mockEvents.map((event, index) => (\r\n            <li key={index} className=\"event-list-item\">\r\n              <div className=\"event-header\">{event.title}</div>\r\n              <div className=\"event-date\"><strong>Date:</strong> {event.date}</div>\r\n              <div className=\"event-location\"><strong>Location:</strong> {event.location}</div>\r\n              <button className=\"register-button\">Register</button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}