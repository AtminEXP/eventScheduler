{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AtminSheth\\\\Desktop\\\\eventScheduler\\\\eventScheduler\\\\exp-events\\\\src\\\\CalendarComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport FullCalendar from '@fullcalendar/react';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport ICAL from 'ical.js';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarComponent = () => {\n  _s();\n  const [events, setEvents] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  // Move convertICalToFullCalendarEvents outside of fetchData\n  const convertICalToFullCalendarEvents = icalEvents => {\n    return icalEvents.map(event => ({\n      title: event.summary,\n      start: event.startDate.toJSDate(),\n      end: event.endDate.toJSDate()\n      // Add other properties as needed\n    }));\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const calendarUrls = ['https://calendar.google.com/calendar/ical/c_e046e4547a291447d2f69732911d8b7328f4c71cb3a789049733cd839beee071%40group.calendar.google.com/public/basic.ics', 'https://calendar.google.com/calendar/ical/exprealty.com_5ch808oclndj5grro9tm5ve9co%40group.calendar.google.com/public/basic.ics'\n        // ... more calendar URLs\n        ];\n        await fetchAndProcessCalendars(calendarUrls);\n      } catch (error) {\n        console.error(\"Event not loaded:\", error);\n      }\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  async function fetchAndProcessCalendars(calendarUrls) {\n    try {\n      await Promise.all(calendarUrls.map(async url => {\n        const response = await axios.get(url, {\n          headers: {\n            'Content-type': 'application/json; charset=utf-8'\n            // Other headers if necessary\n          }\n        });\n        const icsData = response.data;\n        const jcalData = ICAL.parse(icsData);\n        const comp = new ICAL.Component(jcalData);\n        const vevents = comp.getAllSubcomponents('vevent');\n        const icsEvents = vevents.map(vevent => new ICAL.Event(vevent));\n        const fcEvents = convertICalToFullCalendarEvents(icsEvents);\n        setEvents(currentEvents => [...currentEvents, ...fcEvents]);\n      }));\n    } catch (err) {\n      console.error('Error fetching or processing calendar:', err);\n    }\n  }\n  return loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(FullCalendar, {\n    plugins: [dayGridPlugin],\n    initialView: \"dayGridMonth\",\n    events: events\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n};\n_s(CalendarComponent, \"+npp09ZlhZYCuFMbAhFP+QaH6MU=\");\n_c = CalendarComponent;\nexport default CalendarComponent;\nvar _c;\n$RefreshReg$(_c, \"CalendarComponent\");","map":{"version":3,"names":["React","useEffect","useState","FullCalendar","dayGridPlugin","ICAL","axios","jsxDEV","_jsxDEV","CalendarComponent","_s","events","setEvents","loading","setLoading","convertICalToFullCalendarEvents","icalEvents","map","event","title","summary","start","startDate","toJSDate","end","endDate","fetchData","calendarUrls","fetchAndProcessCalendars","error","console","Promise","all","url","response","get","headers","icsData","data","jcalData","parse","comp","Component","vevents","getAllSubcomponents","icsEvents","vevent","Event","fcEvents","currentEvents","err","children","fileName","_jsxFileName","lineNumber","columnNumber","plugins","initialView","_c","$RefreshReg$"],"sources":["C:/Users/AtminSheth/Desktop/eventScheduler/eventScheduler/exp-events/src/CalendarComponent.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport FullCalendar from '@fullcalendar/react';\r\nimport dayGridPlugin from '@fullcalendar/daygrid';\r\nimport ICAL from 'ical.js';\r\nimport axios from 'axios';\r\n\r\nconst CalendarComponent = () => {\r\n  const [events, setEvents] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Move convertICalToFullCalendarEvents outside of fetchData\r\n  const convertICalToFullCalendarEvents = (icalEvents) => {\r\n    return icalEvents.map(event => ({\r\n      title: event.summary,\r\n      start: event.startDate.toJSDate(),\r\n      end: event.endDate.toJSDate(),\r\n      // Add other properties as needed\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const calendarUrls = [\r\n          'https://calendar.google.com/calendar/ical/c_e046e4547a291447d2f69732911d8b7328f4c71cb3a789049733cd839beee071%40group.calendar.google.com/public/basic.ics',\r\n          'https://calendar.google.com/calendar/ical/exprealty.com_5ch808oclndj5grro9tm5ve9co%40group.calendar.google.com/public/basic.ics'\r\n          // ... more calendar URLs\r\n        ];\r\n\r\n        await fetchAndProcessCalendars(calendarUrls);\r\n      } catch (error) {\r\n        console.error(\"Event not loaded:\", error);\r\n      }\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  async function fetchAndProcessCalendars(calendarUrls) {\r\n    try {\r\n      await Promise.all(calendarUrls.map(async (url) => {\r\n        const response = await axios.get(url, {\r\n          headers: {\r\n            'Content-type': 'application/json; charset=utf-8'\r\n            // Other headers if necessary\r\n          }\r\n        });\r\n        const icsData = response.data;\r\n        const jcalData = ICAL.parse(icsData);\r\n        const comp = new ICAL.Component(jcalData);\r\n        const vevents = comp.getAllSubcomponents('vevent');\r\n        const icsEvents = vevents.map(vevent => new ICAL.Event(vevent));\r\n        const fcEvents = convertICalToFullCalendarEvents(icsEvents);\r\n        setEvents(currentEvents => [...currentEvents, ...fcEvents]);\r\n      }));\r\n    } catch (err) {\r\n      console.error('Error fetching or processing calendar:', err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    loading ? (\r\n      <p>Loading...</p>\r\n    ) : (\r\n      <FullCalendar\r\n        plugins={[dayGridPlugin]}\r\n        initialView=\"dayGridMonth\"\r\n        events={events}\r\n      />\r\n    )\r\n  );\r\n};\r\n\r\nexport default CalendarComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}